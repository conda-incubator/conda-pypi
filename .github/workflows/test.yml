name: Test
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    paths:
      - ".github/workflows/test.yml"
      - "conda_pypi/**"
      - "tests/**"
      - "pyproject.toml"
      - "pixi.toml"

concurrency:
  # Concurrency group that uses the workflow name and PR number if available
  # or commit SHA as a fallback. If a new build is triggered under that
  # concurrency group while a previous build is running it will be canceled.
  # Repeated pushes to a PR will cancel all previous builds, while multiple
  # merges to main will not cancel.
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  tests:
    name: ${{ matrix.os }}, py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["310", "311", "312", "313"]
        include:
          - os: macos-15-intel
            python-version: "310"
          - os: macos-latest
            python-version: "311"
    env:
      PIXI_ENV_NAME: test-py${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - uses: prefix-dev/setup-pixi@28eb668aafebd9dede9d97c4ba1cd9989a4d0004 # v0.9.2
        with:
          environments: ${{ env.PIXI_ENV_NAME }}
      - name: Fix Ubuntu configuration
        if: startswith(matrix.os, 'ubuntu-')
        run:
          # Remove global pip config that interferes with isolated testing
          # See: https://github.com/actions/runner-images/blob/6d025759810a/images/ubuntu/scripts/build/install-python.sh#L15-L21
          sudo rm /etc/pip.conf
      - name: Setup project
        run: |
          pixi reinstall --environment ${{ env.PIXI_ENV_NAME }} conda-pypi
          pixi run --environment ${{ env.PIXI_ENV_NAME }} dev
          echo "channels: [conda-forge]" > .pixi/envs/${{ env.PIXI_ENV_NAME }}/.condarc
          pixi run --environment ${{ env.PIXI_ENV_NAME }} conda info
      - name: Run tests
        run: pixi run --environment ${{ env.PIXI_ENV_NAME }} test --basetemp=${{ runner.os == 'Windows' && 'D:\\temp' || runner.temp }} -vv
