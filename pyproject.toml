[tool.black]
target-version = ["py310", "py311"]

[tool.isort]
profile = "black"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "conda-pypi"
description = "Better PyPI interoperability for the conda ecosystem."
readme = "README.md"
authors = [
  { name = "Jaime RodrÃ­guez-Guerra", email = "jrodriguez@quansight.com" },
]
license = { file = "LICENSE" }
classifiers = [
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
requires-python = ">=3.8"
dependencies = [
  # "conda >=23.9.0",
  "pip",
  "grayskull",
  "importlib_resources; python_version < '3.9'",
  "packaging",
]
dynamic = ["version"]
requires-python = ">=3.7"
dependencies = [
  "build",                          # conda name is python-build
  "conda-index",
  "conda-libmamba-solver >=24.9",
  "conda-package-streaming >=0.11",
  "installer >=0.7",                # conda name is python-installer
  "packaging >=24",
  "unearth >=0.17.2",               # download packages from pypi
]

[project.optional-dependencies]
test = [
  "pytest >=7",
  "pytest-cov",
  "pytest-mock",
  "pypi-simple",
]
docs = ["furo", "sphinx", "myst-parser", "mdit-py-plugins>=0.3.0"]

[project.entry-points.conda]
pupa = "conda_pupa.plugin"

[project.urls]
homepage = "https://github.com/conda-incubator/conda-pypi"

[project.entry-points.conda]
conda-pypi = "conda_pypi.plugin"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]

[tool.pixi.dependencies]
python = ">=3.8"
conda = ">=23.9"
pip = "*"
grayskull = "*"

[tool.pixi.tasks]
dev = 'python -mpip install --break-system-packages -e. --no-deps && cp conda_pypi/data/EXTERNALLY-MANAGED $(python -c "import sysconfig; print(sysconfig.get_paths()[\"stdlib\"])")'

[tool.pixi.feature.build]
dependencies = { conda-build = "*" }
tasks = { build = "conda build recipe" }

[tool.pixi.feature.docs.tasks]
docs = { cmd = "sphinx-build -M dirhtml . _build", cwd = "docs" }
serve = { cmd = "python -m http.server", cwd = "docs/_build/dirhtml" }
clean = { cmd = "rm -rf _build", cwd = "docs" }

[tool.pixi.feature.docs.dependencies]
python = "3.10.*"
conda-sphinx-theme = "*"
linkify-it-py = "*"
myst-parser = "*"
sphinx = "*"
sphinx-copybutton = "*"
sphinx-design = "*"
sphinx-reredirects = "*"
sphinx-sitemap = "*"

[tool.pixi.feature.test.tasks]
dev = 'python -mpip install --break-system-packages -e. --no-deps && cp conda_pypi/data/EXTERNALLY-MANAGED $(python -c "import sysconfig; print(sysconfig.get_paths()[\"stdlib\"])")'
test = 'python -mpytest -vvv'
pre-commit = 'pre-commit'

[tool.pixi.feature.test.dependencies]
pytest = "7.4.3.*"
fmt = "!=10.2.0"
pytest-mock = "3.12.0.*"
conda-build = "*"
pre-commit = "*"

[tool.pixi.feature.py38.dependencies]
python = "3.8.*"

[tool.pixi.feature.py39.dependencies]
python = "3.9.*"

[tool.pixi.feature.py310.dependencies]
python = "3.10.*"

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"

[tool.pixi.environments]
build = ["build"]
docs = ["docs"]
test-py38 = ["test", "py38"]
test-py39 = ["test", "py39"]
test-py310 = ["test", "py310"]
test-py311 = ["test", "py311"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "conda_pypi/_version.py"

[tool.ruff]
line-length = 99

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:"]

[tool.coverage.run]
source = ["conda_pypi/", "tests/"]
omit = ["conda_pypi/__init__.py"]
